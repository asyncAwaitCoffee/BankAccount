@using WebBank2App.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Cards";
    IEnumerable<CardModel> cards = ViewBag.Cards;
    await Html.RenderPartialAsync("AccountMenu");
}

<div>@ViewBag.Title</div>
<select id="cards-drop-list">
    @foreach (var card in cards)
    {
        <option value=@card.Id>@card.Code</option>
    }
</select>
<div id="card">
    <div id="bank">Bank Name</div>
    <div id="code">Code</div>
    <div id="valid">12/24</div>
    <div id="holder">Card Holder</div>
    <div id="type">Type</div>
</div>
<div id="balance">0</div>
<button>Pin-Code</button>
<button>CCV</button>
<button>Block</button>
<div id="transfersHistory"></div>

@section Script {
    <script>
        fetchCardData(-1);
        
        document
            .getElementById("cards-drop-list")
            .addEventListener("change", (ev) => { fetchCardData(ev.target.value) })

        async function fetchCardData(cardId) {
            await fetch(`/api/account/card/${cardId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    code.textContent = data.card.code;
                    holder.textContent = data.client.name;
                    type.textContent = data.card.type;
                    valid.textContent = data.card.validThru;
                    balance.textContent = data.account.balance;

                    while (transfersHistory.firstChild) {
                        transfersHistory.removeChild(transfersHistory.firstChild);
                    }

                    for (const history of data.transfersHistoryFrom) {
                        const div = document.createElement("div");
                        div.textContent = `${history.amount} - ${history.dateTime}`;
                        transfersHistory.appendChild(div);
                    }

                    for (const history of data.transfersHistoryTo) {
                        const div = document.createElement("div");
                        div.textContent = `${history.amount} - ${history.dateTime}`;
                        transfersHistory.appendChild(div);
                    }
                });
        }
    </script>
}